# Generated by Django 5.0.4 on 2024-05-18 15:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('testsapp', '0003_alter_genre_photo'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название типа')),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Название')),
                ('cover', models.ImageField(upload_to='blog_covers/', verbose_name='Обложка')),
                ('subtitle', models.CharField(max_length=512, verbose_name='Заголовок')),
                ('first_description', models.TextField(verbose_name='Первое описание')),
                ('image', models.ImageField(upload_to='blog_content-images/', verbose_name='Картинка')),
                ('second_description', models.TextField(verbose_name='Второе описание')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogs.blogtype', verbose_name='Тип блога')),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('image', models.ImageField(upload_to='group_images/')),
                ('articles', models.ManyToManyField(blank=True, related_name='groups', to='blogs.blog')),
                ('tests', models.ManyToManyField(blank=True, related_name='groups', to='testsapp.test')),
            ],
        ),
    ]
